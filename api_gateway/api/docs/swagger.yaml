definitions:
  models.Post:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  second_service.ListPostsResponse:
    properties:
      count:
        type: integer
      results:
        items:
          $ref: '#/definitions/second_service.Post'
        type: array
    type: object
  second_service.Post:
    properties:
      body:
        type: string
      post_id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  second_service.Result:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: jaloldinovuz@gmail.com
    name: Jaloldinov Omadbek
    url: https://www.linkedin.com/in/jaloldinovuz
  description: This task is given for internship position in IMAN
  title: Test task from IMAN Invest
  version: "1.1"
paths:
  /v1/post/{post_id}:
    delete:
      consumes:
      - application/json
      description: Deletes post by id
      parameters:
      - description: post_id
        in: path
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/second_service.Result'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: deletes post by id
      tags:
      - Second Service
    get:
      consumes:
      - application/json
      description: Gets post by id
      parameters:
      - description: post_id
        in: path
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Post'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: retruns unique post by id
      tags:
      - Second Service
    put:
      consumes:
      - application/json
      description: Updates post by post_id
      parameters:
      - description: post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/second_service.Post'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/second_service.Result'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: updates post by  post_id
      tags:
      - Second Service
  /v1/post/list/:
    get:
      consumes:
      - application/json
      description: List posts with limit, offset and based on search query
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/second_service.ListPostsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get list of posts
      tags:
      - Second Service
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
